# -*- mode: ruby -*-
# vi: set ft=ruby :

# "2"라는 숫자는 config 오브젝트 버전을 뜻한다.
# "1" 은 Vagrant 1.0.x의 버전을 의미하고,
# "2" 는 Vagrant 1.1+ 버전을 의미한다.
Vagrant.configure("2") do |config|
  # 옵션은 아래 링크에 문서화 되어있음
  # https://docs.vagrantup.com.

  # 모든 Vagrant 개발 환경에는 "box"가 필요하다.
  # box에 대해서는 https://vagrantcloud.com/search 에서 알아 볼 수 있다.
  config.vm.box = "base"

  # "box"업데이트를 비활성화 한다.
  # 이 기능을 비활성화 하면 "box"는 사용자가 실행 할 때에만 업데이트를 확인한다.
  # `vagrant box outdated`는 권장되지 않는다.
  # config.vm.box_check_update = false

  # (within the machine from a port on the host machine)
  # 시스템 내 호스트 머신 포트에서
  # 특정 포트에 액세스 할 수 있는 forwarded port를 만듭니다.
  # 아래 예시대로 하면, `localhost:8080`에 엑세스 하면 게스트 컴퓨터의 포트 80 에 엑세스 한다.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # 참고 : 이렇게 하면 opened port에 공개적으로 엑세스 할 수 있다.

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
