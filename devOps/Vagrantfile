# Vagrant

# -*- mode: ruby -*-
# vi: set ft=ruby :

# "2"라는 숫자는 config 오브젝트 버전을 뜻한다.
# "1" 은 Vagrant 1.0.x의 버전을 의미하고,
# "2" 는 Vagrant 1.1+ 버전을 의미한다.
Vagrant.configure("2") do |config|

# 버전 호환성 이슈를 최소화 하기 위해서 vagrant 최소 요구 버전을 맨 위에 명시한다.
# Vagrant.require_version ">= 1.3.5", "< 1.4.0"

  # 옵션은 아래 링크에 문서화 되어있음
  # https://docs.vagrantup.com.

  # 모든 Vagrant 개발 환경에는 "box"가 필요하다.
  # box에 대해서는 https://vagrantcloud.com/search 에서 알아 볼 수 있다.
  config.vm.box = "base"

  # "box"업데이트를 비활성화 한다.
  # 이 기능을 비활성화 하면 "box"는 사용자가 실행 할 때에만 업데이트를 확인한다.
  # `vagrant box outdated`는 권장되지 않는다.
  # config.vm.box_check_update = false

  # (within the machine from a port on the host machine)
  # 시스템 내 호스트 머신 포트에서
  # 특정 포트에 액세스 할 수 있는 forwarded port를 만듭니다.
  # 아래 예시대로 하면, `localhost:8080`에 엑세스 하면 게스트 컴퓨터의 포트 80 에 엑세스 합니다.
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  # 참고 : 이렇게 하면 opened port에 공개적으로 엑세스 할 수 있습니다.

  # 특정 포트에 엑세스 할 수 있는 forward port mapping 을 만듭니다.
  # 호스트 머신 내에 포트에서만 엑세스가 허용됩니다.
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # 컴퓨터에 호스트 전용 엑세스를 허용하는 개인 네트워크를 만듭니다.
  # 툭정 IP를 활용합니다.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # 일반적으로  bridged network와 일치하는 공용 네트워크를 만듭니다.
  # bridged networks는 머신을 당신의 네트워크(on your network)에 다른 물리적 장치로 표시합니다.
  # config.vm.network "public_network"

  # 게스트 VM에 추가 폴더를 공유하세요.
  # 첫번째 argument는 호스트의 실제 폴더 경로입니다.
  # 두번째 argument는 게스트에서 폴더를 마운트할 경로입니다.
  # 세번째는 option입니다. [optional]
  # config.vm.synced_folder "../data", "/vagrant_data"

  # 제공자 별 구성을 통해 Vagrant의 다양한 백업 제공자를 미세 조정할 수 있습니다. 
  # 이들은 공급자 별 옵션을 제공합니다.

  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # 쉘 스크립트로 프로비저닝을 사용하십시오.
  # Puppet, Chef, Ansible, Salt 및 Docker와 같은 추가 공급자도 사용할 수 있습니다.
  # 특정 구문 및 사용에 대한 자세한 내용은 설명서를 참조하십시오.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
