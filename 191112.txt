Sptring - 
Code Quality
1. 작성한 코드가 의도한 대로 동작하는가?
2. 작성한 코드에 결함이나 문제가 없는가?
3. 작성한 코드가 읽기 쉽고 유지 보수가 용이한가?

Linting  & Testing 을 통해 코드 Quality를 높일 수있다.

Linting is the process of running a program that will analyse code for potential errors.

Testing을 통해 의도대로 동작하는지, 결함 - 문제가 없는지 tesing을 통해 확인 할 수 있다.

Testing Tool
1. End to End Test
2. Integration Test
3. Unit Test -> 학습할것 Jest ; Facebook에서 만듬


ESLint
JS Linting 유틸리티
대부분의 프로그래밍 언어는 컴파일 하는 과정이 있어 컴파일시 수행되는 Linter가 내장되어있다. 그러니 역동적이고 느슨한 언어인 Js는 이러한 Linter가 존재하지 않는다. Js는 별도의 컴파일 과정이 없고 Node나 Browser에서 바로 실행되기 때문이다. 따라서 Js 개발시 구문오류나 기타 오류를 찾기 위해서는 실제 실행까지 시켜봐야 한다.
하지만 ESLint같은 Linting도구를 사용하면 Js를 실행하지 않고도 기본적인 문제를 발견할 수 있다.

사용 환경
ESLint를 사용할 수 있는 환경은 두 가지가 존재한다.

첫번째로 JavaScript 개발시 사용되는 IDE/Editor 에 지원되는 ESLint 플러그인을 설치하는 것이고,
두번째로 webpack 을 사용하여 webpack 번들링시 eslint-loader 를 추가하여 사용하는 것이다.
물론 두 개 같이 사용할 수도 있다. 두 개 같이 사용하게 되면 좀 더 편리한 JavaScript 개발환경을 구축할 수 있다. 

환경 설정
ESLint를 사용할 때 환경 설정 파일이 존재한다.
이 환경 설정 파일을 참고하여 Linter 는 소스코드 체크를 수행한다.
환경 설정은 IDE/Editor 에 따라서 별도의 UI로 제공되는 경우도 있고,
환경 설정 파일 내용을 오픈 소스로 공개하여 자신들만의 ESLint 환경 설정을 배포하기도 한다. (대표적으로 Airbnb, Naver 등등.. 이 있다.)
자신만의 Linting 설정을 하고자 한다면 ESLint 공식 홈페이지 에서 확인하여 설정할 수 있다.

Object.values 하면 values 값만 return
