XSS: 클라이언트가 서버를 신뢰하여 발생하는 보안문제
-> 서버에서 넘어오는 작업은 신뢰할수 있다고 생각하고 랜더링하여 발생하는 보안문제

CSRF : 반대로 서버가 클라이언트를 신뢰해서 발생하는 이슈
서버는 인증정보를 가지고 오면 믿는다. 사용자는 인증 정보를 가진 채로 해커의 링크를 누르면, 해커는 인증정보를 가로채서 서버에 요청을 보내버린다.

XFF와 CSRF는 어떻게 막을 수 있을까?

브라우저에서 기본적인 XSS공격방법은 막혀있다.


Browser Secury Model

CORS, XSS , CSRF

CORS - Cross-Origin Resource Sharing : 다른 origin간의 resource 를 공유함.
처음 전송되는 리소스의 도메인과 다른 모데인으로부터 리소스가 요청될 경우 해당 리소스는 cross-origin HTTP 요청에 의해 요청됩니다. 예를들어 http://domain-a.com으로부터 전송되는 HTML페이지가 <img> src 속성을 통해 http://domain-a.com/image.jpg를 요청하는 경우가 있습니다. 오늘날 많은 웹페이지들은 CSS 스타일 시트, 이미지, 그리고 스크립트와 같은 리소스들을 각각의 출처로 부터 읽어옵니다.

